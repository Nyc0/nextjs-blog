{"pageProps":{"postData":{"id":"Slitght-side-step","contentHtml":"<p>Since 2011, I have the domain name grymonprez.com. My previous blog which hadn't been updated since 2016 was using it. I decided to check what it would take to re-use <a href=\"nicolas.grymonprez.com\">nicolas.grymonprez.com</a>.</p>\n<p>This can be achieved in a few way, you can point you domain, subdomain to the GitHub Page and update the GitHub Page custom domain settings. This really handy post allowed me to do that: <a href=\"https://da-sha1.me/configuration/2019/03/03/redirect-custom-domain-to-github-pages.html\">Redirect custom domain to github pages</a>.\nHowever this was coming with a con that would not allow me to use another domain for another project. I am not sure if i would need it for any future projects but that's not something I wanted to trade of. Since my domain name comes with a hosting space, ftp and database I decided to use that.</p>\n<p>My hosting provider is OVH and I quickly found\n<a href=\"https://github.com/pitscher/ovh-deploy-hosting-action\">OVH deploy hosting action</a>. However, after looking into <a href=\"https://github.com/Nyc0/ovh-deploy-hosting-action/blob/master/entrypoint.sh\">entrypoint.sh</a> I understood that it was not doing what I wanted. It's not actually deploying the static website. I could have looked at creating and action and updating it but I looked for a FTP action instead. I will keep this as an simple example on how an action template can work.</p>\n<p>Custom <a href=\"https://github.com/marketplace/actions/ftp-deploy\">FTP action</a> to upload the generatic static website to a remote server was easy to set up. I am still trying to figure out an issue with ftps.\nSince my hosting was set up against my WordPress website, I had to configure the URL to point to a different directory within the www directory. I used <a href=\"https://docs.ovh.com/gb/en/hosting/multisites-configuring-multiple-websites/#step-1-access-multisite-management\">Multisites configuration</a> wiki page to achieve it.</p>\n<p>Once set up I had CSS issues. The CSS wasn't loading as the HTML was looking for the code withing my GitHub repo name. Since I was initially deploying the website to GitHub pages I had to update the assetPrefix and basePath when the build process was ran by a GitHub action.</p>\n<pre><code>constÂ isGithubActionsÂ =Â process.env.GITHUB_ACTIONSÂ ||Â false\n\nif (isGithubActions) {\n  // trim off `&#x3C;owner>/`\n  const repo = process.env.GITHUB_REPOSITORY.replace(/.*?\\//, '')\n\n  assetPrefix = `/${repo}/`\n  basePath = `/${repo}`\n}\n</code></pre>\n<p>Removing the variable and if statement would solve the issue. However I wanted to keep the GitHub Page, maybe as a disaster recovery option ðŸ˜….</p>\n<p>Here is my updated code with a new variable and an updated logical condition.</p>\n<pre><code>const isFTPVersion = const isFTPVersion = process.env.ftpVersion || false\n\nif (isGithubActions &#x26;&#x26; !isFTPVersion) {\n</code></pre>\n<p>process.env.ftpVersion has to be added a <a href=\"https://github.com/Nyc0/nextjs-blog/blob/main/.github/workflows/ftp-blog.yml\">ftp-blog.yml</a> and since I wanted to keep deploying to GitHub pages, I created another Build and Deploy workflow to FTP the newly build website that isn't definying assetPrefix and basePath.</p>\n<p>A push to the main branch starts <a href=\"https://github.com/Nyc0/nextjs-blog/blob/main/.github/workflows/build-and-deploy-blog.yml\">build-and-deploy-blog.yml</a>, which then use workflow <a href=\"https://github.com/Nyc0/nextjs-blog/blob/main/.github/workflows/ftp-blog.yml\">ftp-blog.yml</a>. The hiccup I encountered was related to the unavailability of the repository secrets. This was fixed after reading the following help page: <a href=\"https://docs.github.com/en/actions/using-workflows/reusing-workflows\">reusing workflows</a>. The secret either have to be inherited or passed to the reused workflow, I have decided to explicitly pass it.</p>\n","title":"Slight-side-step","date":"2023-04-04"}},"__N_SSG":true}